/*! Copyright (C) 2009 Apertus, All Rights Reserved
 *! Author : Apertus Team
-----------------------------------------------------------------------------**
 *!
 *!  This program is free software: you can redistribute it and/or modify
 *!  it under the terms of the GNU General Public License as published by
 *!  the Free Software Foundation, either version 3 of the License, or
 *!  (at your option) any later version.
 *!
 *!  This program is distributed in the hope that it will be useful,
 *!  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *!  GNU General Public License for more details.
 *!
 *!  You should have received a copy of the GNU General Public License
 *!  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *!
-----------------------------------------------------------------------------**/

import java.awt.CardLayout;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ResolutionSettings extends javax.swing.JPanel {

    ElphelVision Parent;

    public ResolutionSettings(ElphelVision parent) {
        Parent = parent;

        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void Load() {
        switch (Parent.Camera.GetBinning()) {
            case 1:
                Binning1x1.setChecked(true);
                Binning2x2.setChecked(false);
                Binning3x3.setChecked(false);
                break;
            case 2:
                Binning1x1.setChecked(false);
                Binning2x2.setChecked(true);
                Binning3x3.setChecked(false);
                break;
            case 3:
                Binning1x1.setChecked(false);
                Binning2x2.setChecked(false);
                Binning3x3.setChecked(true);
                break;
        }
        WidthField.setText(Integer.toString(Parent.Camera.GetImageWidth()));
        HeightField.setText(Integer.toString(Parent.Camera.GetImageHeight()));

        switch (Parent.Camera.GetBinningMode()) {
            case AVERAGE:
                BinningModeButtonAverage.setChecked(true);
                BinningModeButtonAdditive.setChecked(false);
                break;
            case ADDITIVE:
                BinningModeButtonAverage.setChecked(false);
                BinningModeButtonAdditive.setChecked(true);
                break;
        }
        if (Parent.Camera.GetImageOrientation() == ImageOrientation.LANDSCAPE) {
            OrientationPortrait.setChecked(false);
            OrientationLandscape.setChecked(true);
        }
        if (Parent.Camera.GetImageOrientation() == ImageOrientation.PORTRAIT) {
            OrientationPortrait.setChecked(true);
            OrientationLandscape.setChecked(false);
        }
        UpdateWidthLabel();
        UpdateHeightLabel();

        if (Parent.Camera.GetImageFlipMode() == MirrorImage.NONE) {
            FlipHorizontal.setChecked(false);
            FlipVertical.setChecked(false);
        }
        if (Parent.Camera.GetImageFlipMode() == MirrorImage.HORIZONTAL) {
            FlipHorizontal.setChecked(true);
            FlipVertical.setChecked(false);
        }
        if (Parent.Camera.GetImageFlipMode() == MirrorImage.VERTICAL) {
            FlipHorizontal.setChecked(false);
            FlipVertical.setChecked(true);
        }
        if (Parent.Camera.GetImageFlipMode() == MirrorImage.VERTICALHORIZONTAL) {
            FlipHorizontal.setChecked(true);
            FlipVertical.setChecked(true);
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        Binning = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BinningModeButtonAverage = new elphelvision.EButton();
        Binning1x1 = new elphelvision.EButton();
        Binning2x2 = new elphelvision.EButton();
        BinningModeButtonAdditive = new elphelvision.EButton();
        Binning3x3 = new elphelvision.EButton();
        NavigationPanel = new javax.swing.JPanel();
        SettingsMenu1Button = new elphelvision.EButton();
        ResolutionMenuButton = new elphelvision.EButton();
        MirrorPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        FlipHorizontal = new elphelvision.EButton();
        FlipVertical = new elphelvision.EButton();
        RotationPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        OrientationLandscape = new elphelvision.EButton();
        OrientationPortrait = new elphelvision.EButton();
        ConfirmationPanel = new javax.swing.JPanel();
        SettingsCancelButton = new elphelvision.EButton();
        SettingsOKButton = new elphelvision.EButton();
        DimensionsPanel = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        WidthField = new javax.swing.JTextField();
        CalculatedWidth = new javax.swing.JLabel();
        CalculatedHeight = new javax.swing.JLabel();
        HeightField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        HeightType = new elphelvision.EButton();
        WidthType = new elphelvision.EButton();

        bg.setBackground(new java.awt.Color(0, 0, 0));
        bg.setPreferredSize(new java.awt.Dimension(1024, 600));

        Binning.setBackground(new java.awt.Color(0, 0, 0));

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Binning");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Binning Mode");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        BinningModeButtonAverage.setText("Average");
        BinningModeButtonAverage.setAlignmentY(0.0F);
        BinningModeButtonAverage.setHorizontalTextPosition(2);
        BinningModeButtonAverage.setIconTextGap(20);
        BinningModeButtonAverage.setMargin(new java.awt.Insets(0, 5, 0, 0));
        BinningModeButtonAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinningModeButtonAverageActionPerformed(evt);
            }
        });

        Binning1x1.setText("1x1");
        Binning1x1.setAlignmentY(0.0F);
        Binning1x1.setHorizontalTextPosition(2);
        Binning1x1.setIconTextGap(20);
        Binning1x1.setMargin(new java.awt.Insets(0, 5, 0, 0));
        Binning1x1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binning1x1ActionPerformed(evt);
            }
        });

        Binning2x2.setText("2x2");
        Binning2x2.setAlignmentY(0.0F);
        Binning2x2.setHorizontalTextPosition(2);
        Binning2x2.setIconTextGap(20);
        Binning2x2.setMargin(new java.awt.Insets(0, 5, 0, 0));
        Binning2x2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binning2x2ActionPerformed(evt);
            }
        });

        BinningModeButtonAdditive.setText("Additive");
        BinningModeButtonAdditive.setAlignmentY(0.0F);
        BinningModeButtonAdditive.setHorizontalTextPosition(2);
        BinningModeButtonAdditive.setIconTextGap(20);
        BinningModeButtonAdditive.setMargin(new java.awt.Insets(0, 5, 0, 0));
        BinningModeButtonAdditive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinningModeButtonAdditiveActionPerformed(evt);
            }
        });

        Binning3x3.setText("3x3");
        Binning3x3.setAlignmentY(0.0F);
        Binning3x3.setHorizontalTextPosition(2);
        Binning3x3.setIconTextGap(20);
        Binning3x3.setMargin(new java.awt.Insets(0, 5, 0, 0));
        Binning3x3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Binning3x3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BinningLayout = new javax.swing.GroupLayout(Binning);
        Binning.setLayout(BinningLayout);
        BinningLayout.setHorizontalGroup(
            BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BinningLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(BinningLayout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(BinningLayout.createSequentialGroup()
                            .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Binning1x1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Binning2x2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(BinningModeButtonAdditive, 0, 0, Short.MAX_VALUE)
                                .addComponent(BinningModeButtonAverage, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))))
                    .addComponent(Binning3x3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        BinningLayout.setVerticalGroup(
            BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BinningLayout.createSequentialGroup()
                .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Binning1x1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinningModeButtonAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(BinningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Binning2x2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinningModeButtonAdditive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Binning3x3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NavigationPanel.setBackground(java.awt.Color.black);

        SettingsMenu1Button.setText("Settings Tab 1");
        SettingsMenu1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsMenu1ButtonActionPerformed(evt);
            }
        });

        ResolutionMenuButton.setText("Resolution Menu");
        ResolutionMenuButton.setChecked(true);
        ResolutionMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolutionMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavigationPanelLayout = new javax.swing.GroupLayout(NavigationPanel);
        NavigationPanel.setLayout(NavigationPanelLayout);
        NavigationPanelLayout.setHorizontalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavigationPanelLayout.createSequentialGroup()
                .addComponent(SettingsMenu1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ResolutionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        NavigationPanelLayout.setVerticalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(SettingsMenu1Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ResolutionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MirrorPanel.setBackground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Mirror Image");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel10.setMaximumSize(new java.awt.Dimension(84, 14));
        jLabel10.setMinimumSize(new java.awt.Dimension(84, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(84, 14));

        FlipHorizontal.setText("horizontal");
        FlipHorizontal.setAlignmentY(0.0F);
        FlipHorizontal.setHorizontalTextPosition(2);
        FlipHorizontal.setIconTextGap(20);
        FlipHorizontal.setMargin(new java.awt.Insets(0, 5, 0, 0));
        FlipHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlipHorizontalActionPerformed(evt);
            }
        });

        FlipVertical.setText("vertical");
        FlipVertical.setAlignmentY(0.0F);
        FlipVertical.setHorizontalTextPosition(2);
        FlipVertical.setIconTextGap(20);
        FlipVertical.setMargin(new java.awt.Insets(0, 5, 0, 0));
        FlipVertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlipVerticalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MirrorPanelLayout = new javax.swing.GroupLayout(MirrorPanel);
        MirrorPanel.setLayout(MirrorPanelLayout);
        MirrorPanelLayout.setHorizontalGroup(
            MirrorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FlipVertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(MirrorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FlipHorizontal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MirrorPanelLayout.setVerticalGroup(
            MirrorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MirrorPanelLayout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FlipHorizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FlipVertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        RotationPanel.setBackground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Orientation");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        OrientationLandscape.setText("Landscape");
        OrientationLandscape.setAlignmentY(0.0F);
        OrientationLandscape.setHorizontalTextPosition(2);
        OrientationLandscape.setIconTextGap(20);
        OrientationLandscape.setMargin(new java.awt.Insets(0, 5, 0, 0));
        OrientationLandscape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrientationLandscapeActionPerformed(evt);
            }
        });

        OrientationPortrait.setText("Portrait");
        OrientationPortrait.setAlignmentY(0.0F);
        OrientationPortrait.setHorizontalTextPosition(2);
        OrientationPortrait.setIconTextGap(20);
        OrientationPortrait.setMargin(new java.awt.Insets(0, 5, 0, 0));
        OrientationPortrait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrientationPortraitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RotationPanelLayout = new javax.swing.GroupLayout(RotationPanel);
        RotationPanel.setLayout(RotationPanelLayout);
        RotationPanelLayout.setHorizontalGroup(
            RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OrientationLandscape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(OrientationPortrait, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        RotationPanelLayout.setVerticalGroup(
            RotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RotationPanelLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OrientationLandscape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OrientationPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ConfirmationPanel.setBackground(java.awt.Color.black);

        SettingsCancelButton.setText("Cancel");
        SettingsCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsCancelButtonActionPerformed(evt);
            }
        });

        SettingsOKButton.setText("OK");
        SettingsOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsOKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConfirmationPanelLayout = new javax.swing.GroupLayout(ConfirmationPanel);
        ConfirmationPanel.setLayout(ConfirmationPanelLayout);
        ConfirmationPanelLayout.setHorizontalGroup(
            ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmationPanelLayout.createSequentialGroup()
                .addComponent(SettingsOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ConfirmationPanelLayout.setVerticalGroup(
            ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfirmationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(SettingsOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(SettingsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        DimensionsPanel.setBackground(java.awt.Color.black);

        jTextArea1.setBackground(java.awt.Color.black);
        jTextArea1.setColumns(5);
        jTextArea1.setEditable(false);
        jTextArea1.setForeground(new java.awt.Color(254, 254, 254));
        jTextArea1.setRows(3);
        jTextArea1.setText("Width and Height must be a multiple  of 16.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextArea1.setFocusable(false);

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 18));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Width");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setAlignmentY(0.0F);
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel9.setIconTextGap(0);
        jLabel9.setInheritsPopupMenu(false);
        jLabel9.setRequestFocusEnabled(false);
        jLabel9.setVerifyInputWhenFocusTarget(false);
        jLabel9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        WidthField.setBackground(new java.awt.Color(0, 0, 0));
        WidthField.setForeground(new java.awt.Color(255, 255, 255));
        WidthField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        WidthField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        WidthField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                WidthFieldCaretUpdate(evt);
            }
        });

        CalculatedWidth.setBackground(new java.awt.Color(0, 0, 0));
        CalculatedWidth.setForeground(new java.awt.Color(255, 255, 255));
        CalculatedWidth.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CalculatedWidth.setText("jLabel1");

        CalculatedHeight.setBackground(new java.awt.Color(0, 0, 0));
        CalculatedHeight.setForeground(new java.awt.Color(255, 255, 255));
        CalculatedHeight.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        CalculatedHeight.setText("jLabel1");

        HeightField.setBackground(new java.awt.Color(0, 0, 0));
        HeightField.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 14));
        HeightField.setForeground(new java.awt.Color(255, 255, 255));
        HeightField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        HeightField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        HeightField.setCaretColor(new java.awt.Color(254, 254, 254));
        HeightField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                HeightFieldCaretUpdate(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 1, 18));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Height");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel7.setAlignmentY(0.0F);
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel7.setIconTextGap(0);
        jLabel7.setInheritsPopupMenu(false);
        jLabel7.setRequestFocusEnabled(false);
        jLabel7.setVerifyInputWhenFocusTarget(false);
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        HeightType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        HeightType.setText("type");
        HeightType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightTypeActionPerformed(evt);
            }
        });

        WidthType.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        WidthType.setText("type");
        WidthType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WidthTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DimensionsPanelLayout = new javax.swing.GroupLayout(DimensionsPanel);
        DimensionsPanel.setLayout(DimensionsPanelLayout);
        DimensionsPanelLayout.setHorizontalGroup(
            DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DimensionsPanelLayout.createSequentialGroup()
                .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DimensionsPanelLayout.createSequentialGroup()
                        .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(WidthField)
                            .addComponent(HeightField, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(WidthType, 0, 60, Short.MAX_VALUE)
                            .addComponent(HeightType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CalculatedHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CalculatedWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );
        DimensionsPanelLayout.setVerticalGroup(
            DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DimensionsPanelLayout.createSequentialGroup()
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WidthField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(CalculatedWidth)
                    .addComponent(WidthType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(DimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(HeightField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CalculatedHeight)
                    .addComponent(HeightType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(DimensionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(Binning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RotationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MirrorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                        .addComponent(NavigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 505, Short.MAX_VALUE)
                        .addComponent(ConfirmationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Binning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DimensionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MirrorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RotationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(385, 385, 385)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ConfirmationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NavigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SettingsOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsOKButtonActionPerformed
        if (BinningModeButtonAverage.getChecked()) {
            Parent.Camera.SetBinningMode(BinningMode.AVERAGE);
        }
        if (BinningModeButtonAdditive.getChecked()) {
            Parent.Camera.SetBinningMode(BinningMode.ADDITIVE);
        }

        if (Binning1x1.getChecked()) {
            Parent.Camera.SetBinning(1);
        }
        if (Binning2x2.getChecked()) {
            Parent.Camera.SetBinning(2);
        }
        if (Binning3x3.getChecked()) {
            Parent.Camera.SetBinning(3);
        }

        Parent.Camera.SetParameter(CameraParameter.SENSORWIDTH, Integer.parseInt(CalculatedWidth.getText()));
        Parent.Camera.SetParameter(CameraParameter.SENSORHEIGHT, Integer.parseInt(CalculatedHeight.getText()));

        Parent.Camera.SetPreset(CameraPreset.CUSTOM);

        if (BinningModeButtonAverage.getChecked()) {
            Parent.Camera.SetBinningMode(BinningMode.AVERAGE);
        }
        if (BinningModeButtonAdditive.getChecked()) {
            Parent.Camera.SetBinningMode(BinningMode.ADDITIVE);
        }

        if (OrientationPortrait.getChecked()) {
            Parent.Camera.SetImageOrientation(ImageOrientation.PORTRAIT);
        }
        if (OrientationLandscape.getChecked()) {
            Parent.Camera.SetImageOrientation(ImageOrientation.LANDSCAPE);
        }

        if (!FlipHorizontal.getChecked() && !FlipVertical.getChecked()) {
            Parent.Camera.SetImageFlipMode(MirrorImage.NONE);
        }
        if (FlipHorizontal.getChecked() && !FlipVertical.getChecked()) {
            Parent.Camera.SetImageFlipMode(MirrorImage.HORIZONTAL);
        }
        if (!FlipHorizontal.getChecked() && FlipVertical.getChecked()) {
            Parent.Camera.SetImageFlipMode(MirrorImage.VERTICAL);
        }
        if (FlipHorizontal.getChecked() && FlipVertical.getChecked()) {
            Parent.Camera.SetImageFlipMode(MirrorImage.VERTICALHORIZONTAL);
        }

        try { // Save to config file
            Parent.Camera.WriteConfigFile("autosave.cfg");
        } catch (IOException ex) {
            Logger.getLogger(ResolutionSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "MainCard");
        Parent.StartMplayerVideoStream();
    }//GEN-LAST:event_SettingsOKButtonActionPerformed

    private void SettingsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsCancelButtonActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "MainCard");
        Parent.StartMplayerVideoStream();
    }//GEN-LAST:event_SettingsCancelButtonActionPerformed

    private void BinningModeButtonAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinningModeButtonAverageActionPerformed
        BinningModeButtonAverage.setChecked(true);
        BinningModeButtonAdditive.setChecked(false);
    }//GEN-LAST:event_BinningModeButtonAverageActionPerformed

    private void BinningModeButtonAdditiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinningModeButtonAdditiveActionPerformed
        BinningModeButtonAverage.setChecked(false);
        BinningModeButtonAdditive.setChecked(true);
}//GEN-LAST:event_BinningModeButtonAdditiveActionPerformed

    private void Binning2x2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binning2x2ActionPerformed
        Binning1x1.setChecked(false);
        Binning2x2.setChecked(true);
        Binning3x3.setChecked(false);
        UpdateWidthLabel();
        UpdateHeightLabel();
    }//GEN-LAST:event_Binning2x2ActionPerformed

    private void Binning1x1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binning1x1ActionPerformed
        Binning1x1.setChecked(true);
        Binning2x2.setChecked(false);
        Binning3x3.setChecked(false);
        UpdateWidthLabel();
        UpdateHeightLabel();
    }//GEN-LAST:event_Binning1x1ActionPerformed

    private void Binning3x3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Binning3x3ActionPerformed
        Binning1x1.setChecked(false);
        Binning2x2.setChecked(false);
        Binning3x3.setChecked(true);
        UpdateWidthLabel();
        UpdateHeightLabel();
    }//GEN-LAST:event_Binning3x3ActionPerformed

    private void UpdateWidthLabel() {
        int binning = 0;
        if (Binning1x1.getChecked()) {
            binning = 1;
        }
        if (Binning2x2.getChecked()) {
            binning = 2;
        }
        if (Binning3x3.getChecked()) {
            binning = 3;
        }
        if (!WidthField.getText().isEmpty()) {
            int WidthValue = 0;
            if (OrientationPortrait.getChecked()) {
                WidthValue = Integer.parseInt(HeightField.getText()) * binning;
            }
            if (OrientationLandscape.getChecked()) {
                WidthValue = Integer.parseInt(WidthField.getText()) * binning;
            }
            if (WidthValue % 16 != 0) {
                WidthValue = Math.round(WidthValue / 16) * 16;
            }
            CalculatedWidth.setText(Integer.toString(WidthValue));
        }
    }

    private void UpdateHeightLabel() {
        int binning = 0;
        if (Binning1x1.getChecked()) {
            binning = 1;
        }
        if (Binning2x2.getChecked()) {
            binning = 2;
        }
        if (Binning3x3.getChecked()) {
            binning = 3;
        }
        if (!HeightField.getText().isEmpty()) {
            int HeightValue = 0;
            if (OrientationPortrait.getChecked()) {
                HeightValue = Integer.parseInt(WidthField.getText()) * binning;
            }
            if (OrientationLandscape.getChecked()) {
                HeightValue = Integer.parseInt(HeightField.getText()) * binning;
            }
            if (HeightValue % 16 != 0) {
                HeightValue = Math.round(HeightValue / 16) * 16;
            }
            CalculatedHeight.setText(Integer.toString(HeightValue));
        }
    }
    private void WidthFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_WidthFieldCaretUpdate
        UpdateWidthLabel();
    }//GEN-LAST:event_WidthFieldCaretUpdate

    private void HeightFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_HeightFieldCaretUpdate
        UpdateHeightLabel();
    }//GEN-LAST:event_HeightFieldCaretUpdate

    private void SettingsMenu1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsMenu1ButtonActionPerformed
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Settings1Card");
        Parent.StartMplayerVideoStream();
}//GEN-LAST:event_SettingsMenu1ButtonActionPerformed

    private void ResolutionMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolutionMenuButtonActionPerformed
}//GEN-LAST:event_ResolutionMenuButtonActionPerformed

    private void OrientationLandscapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrientationLandscapeActionPerformed
        OrientationLandscape.setChecked(true);
        OrientationPortrait.setChecked(false);

        UpdateWidthLabel();
        UpdateHeightLabel();
    }//GEN-LAST:event_OrientationLandscapeActionPerformed

    private void OrientationPortraitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrientationPortraitActionPerformed
        OrientationLandscape.setChecked(false);
        OrientationPortrait.setChecked(true);

        UpdateWidthLabel();
        UpdateHeightLabel();
    }//GEN-LAST:event_OrientationPortraitActionPerformed

    private void FlipHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlipHorizontalActionPerformed
        if (FlipHorizontal.getChecked()) {
            FlipHorizontal.setChecked(false);
        } else {
            FlipHorizontal.setChecked(true);
        }
    }//GEN-LAST:event_FlipHorizontalActionPerformed

    private void FlipVerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlipVerticalActionPerformed
        if (FlipVertical.getChecked()) {
            FlipVertical.setChecked(false);
        } else {
            FlipVertical.setChecked(true);
        }
    }//GEN-LAST:event_FlipVerticalActionPerformed

    private void HeightTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightTypeActionPerformed
        Parent.NumberPanel.Load("Height", Integer.parseInt(HeightField.getText()), HeightField, "CustomResolutionCard");
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Numberpanel");
    }//GEN-LAST:event_HeightTypeActionPerformed

    private void WidthTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WidthTypeActionPerformed
        Parent.NumberPanel.Load("Width", Integer.parseInt(WidthField.getText()), WidthField, "CustomResolutionCard");
        CardLayout cl = (CardLayout) (Parent.GetCardManager().getLayout());
        cl.show(Parent.GetCardManager(), "Numberpanel");
    }//GEN-LAST:event_WidthTypeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Binning;
    private elphelvision.EButton Binning1x1;
    private elphelvision.EButton Binning2x2;
    private elphelvision.EButton Binning3x3;
    private elphelvision.EButton BinningModeButtonAdditive;
    private elphelvision.EButton BinningModeButtonAverage;
    private javax.swing.JLabel CalculatedHeight;
    private javax.swing.JLabel CalculatedWidth;
    private javax.swing.JPanel ConfirmationPanel;
    private javax.swing.JPanel DimensionsPanel;
    private elphelvision.EButton FlipHorizontal;
    private elphelvision.EButton FlipVertical;
    private javax.swing.JTextField HeightField;
    private elphelvision.EButton HeightType;
    private javax.swing.JPanel MirrorPanel;
    private javax.swing.JPanel NavigationPanel;
    private elphelvision.EButton OrientationLandscape;
    private elphelvision.EButton OrientationPortrait;
    private elphelvision.EButton ResolutionMenuButton;
    private javax.swing.JPanel RotationPanel;
    private elphelvision.EButton SettingsCancelButton;
    private elphelvision.EButton SettingsMenu1Button;
    private elphelvision.EButton SettingsOKButton;
    private javax.swing.JTextField WidthField;
    private elphelvision.EButton WidthType;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
